#if !defined(_fm_)
#  define _fm_

class model_data : public ad_comm{
  int oper_mod;
  int mcmcmode;
  int mcflag;
  data_int Growth_Option;
  int phase_grwth;
  int phase_wt;
  int phase_growth_cov;
  int do_wt_only;
  data_int ABC_age_lb;
  data_int phase_age_incr;
  data_int phase_init_age_comp;
  data_int phase_mn_rec;
  data_int phase_rec_dev;
  data_int phase_mn_f;
  data_int phase_F40;
  data_int phase_fmort;
  data_int phase_proj;
  data_int phase_logist_sel;
  data_int phase_logist_sel_devs;
  data_int phase_male_sel;
  data_int phase_q;
  data_number q_alpha_prior;
  data_int phase_q_alpha;
  data_number q_beta_prior;
  data_int phase_q_beta_in;
  data_int phase_m_f;
  data_int phase_m_m;
  data_int phase_sr;
  data_int phase_env_cov;
  data_int phase_sigmaR;
  data_int phase_wtfmsy;
  data_number pf_sigma;
  data_number a50_sigma;
  data_number slp_sigma;
  data_number q_exp;
  data_number q_sigma;
  double ln_q_in;
  data_number m_exp;
  data_number m_sigma;
  data_number sigmaR_exp;
  data_number sigmaR_sigma;
  data_int nselages;
  data_vector lambda;
  data_int styr_sr;
  data_int endyr_sr;
  data_int styr_wt;
  data_int endyr_wt;
  data_number yr1_futcat;
  data_number yr2_futcat;
  data_number n_retro;
  data_number surv_dwnwt;
  data_number cv_inc;
  data_number n_comp;
  data_number eof_check;
  int phase_male_sel_offset;
  data_int nyrs_fut;
  data_vector fut_temp;
  data_int styr;
  data_int endyr_in;
  int endyr;
  data_int nages;
  data_number a_lw_f;
  data_number b_lw_f;
  data_number a_lw_m;
  data_number b_lw_m;
  data_int nfsh;
  data_matrix obs_catch;
  data_ivector nyrs_fsh_age_c;
  data_ivector nyrs_fsh_age_s;
  data_imatrix yrs_fsh_age_c;
  data_imatrix yrs_fsh_age_s;
  data_3array oac_fsh_c;
  data_3array oac_fsh_s;
  data_3array wt_fsh_in;
  d3_array wt_fsh_b_in;
  d3_array wt_fsh_f_in;
  d3_array wt_fsh_m_in;
  dmatrix wt_fsh_tmp_f;
  dmatrix wt_fsh_tmp_m;
  dmatrix wt_pop_tmp_f;
  dmatrix wt_pop_tmp_m;
  dvector wt_fsh_mn_f;
  dvector wt_fsh_mn_m;
  dvector wt_pop_mn_f;
  dvector wt_pop_mn_m;
  dvector wt_fsh_sigma_f;
  dvector wt_fsh_sigma_m;
  dvector wt_pop_sigma_f;
  dvector wt_pop_sigma_m;
  data_matrix nsmpl_fsh_c;
  data_matrix nsmpl_fsh_s;
  data_int nsrv;
  ivector phase_q_beta;
  data_ivector nyrs_srv;
  data_imatrix yrs_srv;
  data_vector mo_srv;
  data_matrix obs_srv;
  data_matrix obs_se_srv;
  dmatrix obs_lse_srv;
  data_ivector nyrs_srv_age_c;
  data_ivector nyrs_srv_age_s;
  data_matrix yrs_srv_age_c;
  data_matrix yrs_srv_age_s;
  data_matrix nsmpl_srv_c;
  data_matrix nsmpl_srv_s;
  data_3array oac_srv_c;
  data_3array oac_srv_s;
  data_3array wt_srv_f_in;
  data_3array wt_srv_m_in;
  dmatrix wt_obs_f;
  dmatrix wt_obs_m;
  data_matrix wt_pop_f_in;
  data_matrix wt_pop_m_in;
  dvector age_vector;
  data_matrix maturity;
  data_number init_age_comp;
  int styr_rec;
  int k;
  int i;
  int j;
  int rec_lag;
  data_ivector n_env_cov;
  data_3array env_cov;
  double adj_1;
  double adj_2;
  double SSB_1;
  double SSB_2;
  data_number spawnmo;
  double spmo_frac;
  data_vector srv_mo;
  dvector srv_mo_frac;
  data_matrix n_wts;
  data_vector growth_cov;
  data_int Check;
  int styr_fut;
  int endyr_fut;
  int num_proj_Fs;
  int npfs;
  dvector offset_srv;
  dvector offset_fsh;
  double R_guess;
  data_matrix future_ABC;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  dvariable adromb(dvariable(model_parameters::*f)(const dvariable&), double a, double b, int ns)
  {
    using namespace std::placeholders;
    _func func = std::bind(f, this, _1);
    return function_minimizer::adromb(func, a, b, ns);
  }
  ivector integer_control_flags;
  dvector double_control_flags;
  param_init_vector ln_q_srv;
  param_init_bounded_number natmort_f;
  param_init_bounded_number natmort_m;
  param_init_bounded_number Linf_f;
  param_init_bounded_number K_f;
  param_init_bounded_number t0_f;
  param_init_bounded_number Linf_m;
  param_init_bounded_number K_m;
  param_init_bounded_number t0_m;
  param_vector base_incr_f;
  param_vector base_incr_m;
  param_matrix incr_dev;
  param_init_bounded_dev_vector age_incr;
  param_init_bounded_dev_vector yr_incr;
  param_init_number growth_alpha;
  param_init_vector q_alpha;
  param_init_vector_vector q_beta;
  param_init_number mean_log_rec;
  param_init_bounded_vector rec_dev;
  param_init_number mean_log_init;
  param_init_bounded_vector init_dev_m;
  param_init_bounded_vector init_dev_f;
  param_number sigmaRsq;
  param_number avg_rec_dev;
  param_number sigma_rec;
  param_number var_rec;
  param_init_vector log_avg_fmort;
  param_init_bounded_matrix fmort_dev;
  param_vector Fmort;
  param_number hrate;
  param_number kobs_tot_catch;
  param_number Fnew;
  param_init_vector sel_slope_fsh_f;
  param_init_vector sel50_fsh_f;
  param_init_bounded_matrix sel_slope_fsh_devs_f;
  param_init_bounded_matrix sel50_fsh_devs_f;
  param_number slope_tmp;
  param_number sel50_tmp;
  param_init_vector sel_slope_fsh_m;
  param_init_bounded_number male_sel_offset;
  param_init_bounded_matrix sel_slope_fsh_devs_m;
  param_init_vector sel50_fsh_m;
  param_init_bounded_matrix sel50_fsh_devs_m;
  param_init_vector sel_slope_srv;
  param_init_vector sel50_srv;
  param_init_vector sel_slope_srv_m;
  param_init_vector sel50_srv_m;
  param_init_bounded_vector F40;
  param_init_bounded_vector F35;
  param_init_bounded_vector F30;
  param_init_number R_logalpha;
  param_init_number R_logbeta;
  param_vector SRC_recruits;
  param_vector SAM_recruits;
  param_init_number sigmaR;
  param_number R_alpha;
  param_vector SRR_SSB;
  param_stddev_vector rechat;
  param_stddev_vector pred_rec;
  param_3array wt_fsh;
  param_3array wt_fsh_f;
  param_3array wt_fsh_m;
  param_3array wt_srv_f;
  param_3array wt_srv_m;
  param_matrix wt_pop_f;
  param_matrix wt_pop_m;
  param_vector wt_vbg_f;
  param_vector wt_vbg_m;
  param_matrix wt_pred_f;
  param_matrix wt_pred_m;
  param_init_vector wt_fsh_fut_f;
  param_init_vector wt_fsh_fut_m;
  param_init_vector wt_pop_fut_f;
  param_init_vector wt_pop_fut_m;
  param_number R_beta;
  param_number phizero;
  param_3array log_sel_fsh_f;
  param_3array log_sel_fsh_m;
  param_3array sel_fsh_f;
  param_3array sel_fsh_m;
  param_matrix log_sel_srv_f;
  param_matrix log_sel_srv_m;
  param_init_vector log_msy_sel_f;
  param_init_vector log_msy_sel_m;
  param_vector partial_F_f;
  param_vector partial_F_m;
  param_matrix sel_srv_f;
  param_matrix sel_srv_m;
  param_matrix pred_srv;
  param_3array eac_fsh_c;
  param_3array eac_srv_c;
  param_3array eac_fsh_s;
  param_3array eac_srv_s;
  param_matrix pred_catch;
  param_matrix natage_f;
  param_matrix natage_m;
  param_3array catage_f;
  param_3array catage_m;
  param_matrix Z_m;
  param_matrix Z_f;
  param_3array F_m;
  param_3array F_f;
  param_matrix expl_biom;
  param_matrix S_m;
  param_matrix S_f;
  param_number surv_f;
  param_number surv_m;
  param_stddev_vector SSB;
  param_stddev_matrix q_srv;
  param_number sigma;
  param_vector nLogPosterior;
  param_vector rec_like;
  param_number catch_like;
  param_number wt_fut_like;
  param_number wt_msy_like;
  param_number init_like;
  param_number sigmaR_prior;
  param_vector q_prior;
  param_number m_prior;
  param_vector age_like_fsh;
  param_vector age_like_srv;
  param_vector wt_like;
  param_vector sel_like;
  param_number fpen;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value obj_fun;
  param_vector srv_like;
  param_number SPR_ABC;
  param_number SPR_OFL;
  param_number sigmaR_fut;
  param_vector ftmp;
  param_number SB0;
  param_number SBF40;
  param_number SBF35;
  param_number SBF30;
  param_number sprpen;
  param_vector Fratio;
  param_matrix Nspr;
  param_matrix nage_future_f;
  param_matrix nage_future_m;
  param_init_vector rec_dev_future;
  param_vector SSB_future;
  param_vector TotBiom_future;
  param_3array F_future_f;
  param_3array F_future_m;
  param_matrix Z_future_f;
  param_matrix Z_future_m;
  param_matrix S_future_f;
  param_matrix S_future_m;
  param_matrix catage_future_f;
  param_matrix catage_future_m;
  param_number avg_rec_dev_future;
  param_vector avg_F_future;
  param_stddev_number msy;
  param_stddev_number Fmsy;
  param_stddev_number logFmsy;
  param_stddev_number Fmsyr;
  param_stddev_number logFmsyr;
  param_stddev_vector ABC_biom;
  param_stddev_number Bmsy;
  param_stddev_number Bmsyr;
  param_stddev_vector TotBiom;
  param_stddev_number endbiom;
  param_stddev_number depletion;
  param_stddev_matrix future_catch;
  param_stddev_vector future_Fs;
  param_stddev_matrix future_SSB;
  param_stddev_matrix future_TotBiom;
public:
  virtual void userfunction(void);
  virtual void report(const dvector& gradients);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void);
  void get_selectivity(void);
  void get_mortality(void);
  void get_numbers_at_age(void);
  void catch_at_age(void);
  void evaluate_the_objective_function(void);
  void Fmort_Pen(void);
  void Srv_Like(void);
  void Age_Like(void);
 dvariable spr_ratio(dvariable trial_F,dvar_vector& sel);
  void compute_spr_rates(void);
  void compute_sr_fit(void);
 dvariable SRecruit(const dvariable& Stmp);
 dvariable get_yield(const dvariable& Ftmp);
 dvariable get_spr(dvariable Ftemp);
 dvariable get_ypr(dvariable Ftemp);
 dvariable get_biom_per_rec(dvariable Ftemp);
  void get_msy(void);
  void Future_projections(void);
  void write_srec(void);
  void compute_spr_rates_2(void);
 dvariable get_spr_rates(double spr_percent);
 dvariable spr_ratio(dvariable trial_F);
  void between_phases_calculations(void);
 double mn_age(const dvar_vector& pobs);
 double Sd_age(const dvar_vector& pobs, const dvar_vector& phat);
 double Eff_N_adj(const double, const dvar_vector& pobs, const dvar_vector& phat);
 double Eff_N2(const dvar_vector& pobs, const dvar_vector& phat);
 double Eff_N(const dvar_vector& pobs, const dvar_vector& phat);
 dvariable SolveF2(const dvar_vector& N_tmp_f, dvar_vector& N_tmp_m, double  TACin);
  void Write_sd(void);
  void Get_wt_age(void);
  void Initial_wt(void);
  void Get_Pred_wt(void);
  void Write_R_wts(void);
  void Write_R(void);

};
#endif
